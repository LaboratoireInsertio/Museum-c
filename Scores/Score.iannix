/*
 *	IanniX Score File
 */


/*
 *	This method is called first.
 *	It is the good section for asking user for script global variables (parameters).
 *	
 * 	This section is never overwritten by IanniX when saving.
 */
function askUserForParameters() {
	//title("The title of the parameter box");
	//ask("Group name of the parameter (only for display purposes)", "Parameter label", "myGlobalVar", "theDefaultValue");

    ask("Lines A",  "count", "lineMax",  5);
    ask("Lines A",  "x spread", "xSpread",  5);
    ask("Lines A",  "y spread", "ySpread",  5);
    ask("Lines A",  "z spread", "zSpread",  1);
    ask("Lines A",  "x center", "xCenter",  2);
    ask("Lines A",  "y center", "yCenter",  2);
    ask("Lines A",  "z center", "zCenter",  0);
	ask("Lines A", "fuzzyness", "fromCenter", 0.5);
	ask("Lines A",  "subSegments", "subSegments",  0);
	ask("Lines A",  "hue start", "hueStart",  13);
	ask("Lines A",  "hue end", "hueEnd",  40);

	 ask("Lines B",  "count", "lineMaxB",  5);
    ask("Lines B",  "x spread", "xSpreadB",  5);
    ask("Lines B",  "y spread", "ySpreadB",  5);
    ask("Lines B",  "z spread", "zSpreadB",  1);
    ask("Lines B",  "x center", "xCenterB",  -2);
    ask("Lines B",  "y center", "yCenterB",  2);
    ask("Lines B",  "z center", "zCenterB",  0);
	ask("Lines B", "fuzzyness", "fromCenterB", 0.5);
	ask("Lines B",  "subSegments", "subSegmentsB",  0);
	ask("Lines B",  "hue start", "hueStartB",  13);
	ask("Lines B",  "hue end", "hueEndB",  40);
}



/*
 *	This method stores all the operations made through IanniX scripts.
 *	You can add some commands here to make your own scripts!
 *	Scripts are written in Javascript but even with a limited knowledge of Javascript, many types of useful scripts can be created.
 *	
 *	Beyond the standard javascript commands, the run() function is used to send commands to IanniX.
 *	Commands must be provided to run() as a single string.
 *	For example, run("zoom 100"); sets the display zoom to 100%.
 *	
 *	To combine numeric parameters with text commands to produce a string, use the concatenation operator.
 *	In the following example center_x and center_y are in numeric variables and must be concatenated to the command string.
 *	Example: run("setPos current " + center_x + " " + center_y + " 0");
 *	
 *	To learn IanniX commands, perform an manipulation in IanniX graphical user interface, and see the Helper window.
 *	You'll see the syntax of the command-equivalent action.
 *	
 *	And finally, remember that most of commands must target an object.
 *	Global syntax is always run("<command name> <target> <arguments>");
 *	Targets can be an ID (number) or a Group ID (string name of group) (please see "Info" tab in Inspector panel).
 *	Special targets are "current" (last used ID), "all" (all the objects) and "lastCurve" (last used curve).
 *	
 * 	This section is never overwritten by IanniX when saving.
 */
function makeWithScript() {
	//Clears the score
	run("clear");
	//Resets rotation
	run("rotate 0 0 0");
	//Resets score viewport center
	run("center 0 0");
	//Resets score zoom
	run("zoom 100");

//Viewport setup
	run("rotate 0 -70 -10");
	run("center 0 0");
	run("zoom 150");
	
	
	//Line curves
	for(var lineIndex = 0 ; lineIndex < lineMax ; lineIndex++)
		addLine();

		//Line curves
	for(var lineIndex = 0 ; lineIndex < lineMaxB ; lineIndex++)
		addLineB();


}

//Custom function
var id = 0;
function addLine() {
	
	var start;// = {x: random(-xSpread, xSpread), y: random(-ySpread, ySpread), z: random(-zSpread, zSpread)};
	var end;// =   {x: random(-xSpread, xSpread), y: random(-ySpread, ySpread), z: random(-zSpread, zSpread)};

	if ( random(0,100) > 50 ) {
		 start = {x: random(-xSpread, xSpread) * fromCenter + xCenter, y: random(-ySpread, ySpread) * fromCenter + yCenter, z: random(-zSpread, zSpread) * fromCenter + zCenter};
		 end =   {x: random(-xSpread, xSpread) + xCenter, y: random(-ySpread, ySpread) + yCenter, z: random(-zSpread, zSpread) + zCenter};
	} else {
		 start = {x: random(-xSpread, xSpread) + xCenter, y: random(-ySpread, ySpread) +yCenter , z: random(-zSpread, zSpread) + zCenter};
		 end =   {x: random(-xSpread, xSpread) * fromCenter + xCenter, y: random(-ySpread, ySpread)* fromCenter  + yCenter, z: random(-zSpread, zSpread)* fromCenter + zCenter};
	}

	if ( start.z * end.z < 0 == false ) end.z = end.z * -1;

		var colorHue = random(hueStart, hueEnd)+ " 255 255 127";
		

		run("add curve        " + (1000 + id));
		run("setGroup         current lines");
		run("setPointAt       current 0 " + (start.x ) + " " + (start.y ) + " " + (start.z ));
		var currentPoint = 1;

       // SUB SEGMENTS
		

		for ( var i = 0 ; i < subSegments;i++) {
			
		    var ix = random(start.x,end.x);
		    var iy = random(start.y,end.y);
		    var iz = random(start.z,end.z);

		    run("setPointAt       current " + currentPoint + " " + (  ix ) + " " + (  iy ) + " " + (  iz ));
			currentPoint = currentPoint + 1;
		}
		// SUB SEGMENTS

		// LAST POINT
		run("setPointAt       current " + currentPoint + " " + (  end.x ) + " " + (  end.y ) + " " + (  end.z ));
		run("setColorHue      current " + colorHue);
		run("setSize          current 1.5");
	
			run("add cursor       " + id);
			run("setGroup         current lines");
			run("setCurve         current lastCurve");
			run("setSpeed         current " + random(0.1, 2));
			run("setBoundsSource  current -5 5 -5 5 -5 5");

			run("setColorHue      current " + colorHue);
			run("setWidth         current 2");
			run("setDepth         current 1");
			run("setSize          current 2");
			run("setPattern       current 0 0 1");
			run("setMessage       current 1000,");
		
		
		id++
	
}

function addLineB() {
	
	var start;// = {x: random(-xSpreadB, xSpreadB), y: random(-ySpreadB, ySpreadB), z: random(-zSpreadB, zSpreadB)};
	var end;// =   {x: random(-xSpreadB, xSpreadB), y: random(-ySpreadB, ySpreadB), z: random(-zSpreadB, zSpreadB)};

	if ( random(0,100) > 50 ) {
		 start = {x: random(-xSpreadB, xSpreadB) * fromCenterB + xCenterB, y: random(-ySpreadB, ySpreadB) * fromCenterB + yCenterB, z: random(-zSpreadB, zSpreadB) * fromCenterB + zCenterB};
		 end =   {x: random(-xSpreadB, xSpreadB) + xCenterB, y: random(-ySpreadB, ySpreadB) + yCenterB, z: random(-zSpreadB, zSpreadB) + zCenterB};
	} else {
		 start = {x: random(-xSpreadB, xSpreadB) + xCenterB, y: random(-ySpreadB, ySpreadB) +yCenterB , z: random(-zSpreadB, zSpreadB) + zCenterB};
		 end =   {x: random(-xSpreadB, xSpreadB) * fromCenterB + xCenterB, y: random(-ySpreadB, ySpreadB)* fromCenterB  + yCenterB, z: random(-zSpreadB, zSpreadB)* fromCenterB + zCenterB};
	}

	if ( start.z * end.z < 0  == false) end.z = end.z * -1;

	

		var colorHue = random(hueStartB, hueEndB)+ " 255 255 127";
		

		run("add curve        " + (1000 + id));
		run("setGroup         current lines");
		run("setPointAt       current 0 " + (start.x ) + " " + (start.y ) + " " + (start.z ));
		var currentPoint = 1;

       // SUB SEGMENTS
		

		for ( var i = 0 ; i < subSegmentsB;i++) {
			
		    var ix = random(start.x,end.x);
		    var iy = random(start.y,end.y);
		    var iz = random(start.z,end.z);

		    run("setPointAt       current " + currentPoint + " " + (  ix ) + " " + (  iy ) + " " + (  iz ));
			currentPoint = currentPoint + 1;
		}
		// SUB SEGMENTS

		// LAST POINT
		run("setPointAt       current " + currentPoint + " " + (  end.x ) + " " + (  end.y ) + " " + (  end.z ));

		run("setColorHue      current " + colorHue);
		run("setSize          current 1.5");
	
			run("add cursor       " + (3000) + id);
			run("setGroup         current lines");
			run("setCurve         current lastCurve");
			run("setSpeed         current " + random(0.1, 2));
			run("setBoundsSource  current -5 5 -5 5 -5 5");

			run("setColorHue      current " + colorHue);
			run("setWidth         current 2");
			run("setDepth         current 1");
			run("setSize          current 2");
			run("setPattern       current 0 0 1");
			run("setMessage       current 1000,");
		
		
		id++
	
}


/*
 *	When an incoming message is received, this method is called.
 *		- <protocol> tells information about the nature of message ("osc", "midi", "direct…)
 *		- <host> and <port> gives the origin of message, specially for IP protocols (for OpenSoundControl, UDP or TCP, it is the IP and port of the application that sends the message)
 *		- <destination> is the supposed destination of message (for OpenSoundControl it is the path, for MIDI it is Control Change or Note on/off…)
 *		- <values> are an array of arguments contained in the message
 *	
 * 	This section is never overwritten by IanniX when saving.
 */
function onIncomingMessage(protocol, host, port, destination, values) {
	//Logs a message in the console (open "Config" tab from Inspector panel and see "Message log")
	console("Received on '" + protocol + "' (" + host + ":" + port + ") to '" + destination + "', " + values.length + " values : ");
	
	//Browses all the arguments and displays them in log window
	for(var valueIndex = 0 ; valueIndex < values.length ; valueIndex++)
		console("- arg " + valueIndex + " = " + values[valueIndex]);

   if ( destination == "test") {
		console("bob");
	}
}


/*
 *	This method stores all the operations made through the graphical user interface.
 *	You are not supposed to modify this section, but it can be useful to remove some stuff that you added accidentaly.
 *	
 * 	Be very careful! This section is automaticaly overwritten when saving a score.
 */
function madeThroughGUI() {
//GUI: NEVER EVER REMOVE THIS LINE
	run("zoom 294.922");
	run("rotate 0 -22.1614 -4.08377");
	run("speed 1");
	run("center 1.56712 2.84294");

	run("registertexture background -7.8  8.75 8.7 -7.75 plan du grand hall.png");
	run("registercolor background_texture_tint  255 255 255 50");
	run("registercolor lighttheme_trigger_active  0 0 200 255");

	run("add curve 107");
	run("setpos current 4.6679 -5.71217 0");
	run("setpointsellipse current 1.13347e-129 1.13347e-129");
	run("setresize current 2.26694e-129 2.26694e-129");
	run("setposz current 0");


	run("setmute lines 0");


	run("add trigger 74");
	run("setpos current -11.2887 -0.321911 0.25");
	run("setmessage current 1, direct:// rotate {random(-20, 20)} {random(0, -80)} {random(-40, 40)} ,");
	run("setlabel current ROTATER");
	run("setposz current 0.25");
	run("settriggeroff current 0.1");
	run("setgroup current tools");


	run("add trigger 77");
	run("setpos current 3.75982 1.98135 0.25");
	run("setlabel current C3");
	run("settriggeroff current 0.1");
	run("setmessage current 1, osc://ip_out:port_out/trigger trigger_label trigger_distance , midi://midi_out/note 1 69 127 5 ,");
	run("setposz current 0.25");
	run("setgroup current xbees");

	run("add trigger 79");
	run("setpos current -4.42177 0.240456 0.25");
	run("setlabel current D#4");
	run("settriggeroff current 0.1");
	run("setmessage current 1, osc://ip_out:port_out/trigger trigger_label trigger_distance , midi://midi_out/note 1 69 127 5 ,");
	run("setposz current 0.25");
	run("setgroup current xbees");

	run("add trigger 80");
	run("setpos current -2.02092 -2.23447 0.25");
	run("setlabel current D4");
	run("settriggeroff current 0.1");
	run("setmessage current 1, osc://ip_out:port_out/trigger trigger_label trigger_distance , midi://midi_out/note 1 69 127 5 ,");
	run("setposz current 0.25");
	run("setgroup current xbees");

	run("add trigger 81");
	run("setpos current -1.97134 -2.84198 0.25");
	run("setlabel current D#6");
	run("settriggeroff current 0.1");
	run("setmessage current 1, osc://ip_out:port_out/trigger trigger_label trigger_distance , midi://midi_out/note 1 69 127 5 ,");
	run("setposz current 0.25");
	run("setgroup current xbees");

	run("add trigger 85");
	run("setpos current -0.69874 3.36932 0.25");
	run("setlabel current E2");
	run("settriggeroff current 0.1");
	run("setmessage current 1, osc://ip_out:port_out/trigger trigger_label trigger_distance , midi://midi_out/note 1 69 127 5 ,");
	run("setposz current 0.25");
	run("setgroup current xbees");

	run("add trigger 86");
	run("setpos current -0.760372 1.6254 0.25");
	run("setlabel current E4");
	run("settriggeroff current 0.1");
	run("setmessage current 1, osc://ip_out:port_out/trigger trigger_label trigger_distance , midi://midi_out/note 1 69 127 5 ,");
	run("setposz current 0.25");
	run("setgroup current xbees");

	run("add trigger 87");
	run("setpos current -0.730647 2.23232 0.25");
	run("setlabel current E5");
	run("settriggeroff current 0.1");
	run("setmessage current 1, osc://ip_out:port_out/trigger trigger_label trigger_distance , midi://midi_out/note 1 69 127 5 ,");
	run("setposz current 0.25");
	run("setgroup current xbees");

	run("add trigger 88");
	run("setpos current -0.766044 2.85416 0.25");
	run("setlabel current E3");
	run("settriggeroff current 0.1");
	run("setmessage current 1, osc://ip_out:port_out/trigger trigger_label trigger_distance , midi://midi_out/note 1 69 127 5 ,");
	run("setposz current 0.25");
	run("setgroup current xbees");

	run("add trigger 90");
	run("setpos current 3.73756 2.78675 0.25");
	run("setlabel current C2");
	run("settriggeroff current 0.1");
	run("setmessage current 1, osc://ip_out:port_out/trigger trigger_label trigger_distance , midi://midi_out/note 1 69 127 5 ,");
	run("setposz current 0.25");
	run("setgroup current xbees");

	run("add trigger 91");
	run("setpos current -6.62576 -1.82075 0.25");
	run("setlabel current C6");
	run("settriggeroff current 0.1");
	run("setmessage current 1, osc://ip_out:port_out/trigger trigger_label trigger_distance , midi://midi_out/note 1 69 127 5 ,");
	run("setposz current 0.25");
	run("setgroup current xbees");

	run("add trigger 92");
	run("setpos current -6.84137 0.836312 0.25");
	run("setlabel current C4");
	run("settriggeroff current 0.1");
	run("setmessage current 1, osc://ip_out:port_out/trigger trigger_label trigger_distance , midi://midi_out/note 1 69 127 5 ,");
	run("setposz current 0.25");
	run("setgroup current xbees");

	run("add trigger 93");
	run("setpos current -6.72364 -0.505527 0.25");
	run("setlabel current C5");
	run("settriggeroff current 0.1");
	run("setmessage current 1, osc://ip_out:port_out/trigger trigger_label trigger_distance , midi://midi_out/note 1 69 127 5 ,");
	run("setposz current 0.25");
	run("setgroup current xbees");

	run("add trigger 94");
	run("setpos current -6.66068 -1.28818 0.25");
	run("setlabel current C#5");
	run("settriggeroff current 0.1");
	run("setmessage current 1, osc://ip_out:port_out/trigger trigger_label trigger_distance , midi://midi_out/note 1 69 127 5 ,");
	run("setposz current 0.25");
	run("setgroup current xbees");

	run("add trigger 95");
	run("setpos current 3.83534 4.70214 0.25");
	run("setlabel current D#2");
	run("settriggeroff current 0.1");
	run("setmessage current 1, osc://ip_out:port_out/trigger trigger_label trigger_distance , midi://midi_out/note 1 69 127 5 ,");
	run("setposz current 0.25");
	run("setgroup current xbees");

	run("add trigger 96");
	run("setpos current 5.32439 3.5541 0.25");
	run("setlabel current D3");
	run("settriggeroff current 0.1");
	run("setmessage current 1, osc://ip_out:port_out/trigger trigger_label trigger_distance , midi://midi_out/note 1 69 127 5 ,");
	run("setposz current 0.25");
	run("setgroup current xbees");

	run("add trigger 97");
	run("setpos current -0.794377 -0.941405 0.25");
	run("setlabel current D5");
	run("settriggeroff current 0.1");
	run("setmessage current 1, osc://ip_out:port_out/trigger trigger_label trigger_distance , midi://midi_out/note 1 69 127 5 ,");
	run("setposz current 0.25");
	run("setgroup current xbees");

	run("add trigger 98");
	run("setpos current 3.74796 3.40355 0.25");
	run("setlabel current D#3");
	run("settriggeroff current 0.1");
	run("setmessage current 1, osc://ip_out:port_out/trigger trigger_label trigger_distance , midi://midi_out/note 1 69 127 5 ,");
	run("setposz current 0.25");
	run("setgroup current xbees");

	run("add trigger 99");
	run("setpos current -0.763741 -1.62592 0.25");
	run("setlabel current D#5");
	run("settriggeroff current 0.1");
	run("setmessage current 1, osc://ip_out:port_out/trigger trigger_label trigger_distance , midi://midi_out/note 1 69 127 5 ,");
	run("setposz current 0.25");
	run("setgroup current xbees");

	run("add trigger 101");
	run("setpos current 3.75684 1.45035 0.25");
	run("setlabel current C#3");
	run("settriggeroff current 0.1");
	run("setmessage current 1, osc://ip_out:port_out/trigger trigger_label trigger_distance , midi://midi_out/note 1 69 127 5 ,");
	run("setposz current 0.25");
	run("trig current false");
	run("setgroup current xbees");

	run("add trigger 104");
	run("setpos current -6.908 0.173119 0.25");
	run("setlabel current C#4");
	run("setmessage current 1, osc://ip_out:port_out/trigger trigger_label trigger_distance , midi://midi_out/note 1 69 127 5 ,");
	run("settriggeroff current 0.1");
	run("setposz current 0.25");
	run("setgroup current xbees");



//GUI: NEVER EVER REMOVE THIS LINE
}


/*
 *	This method stores all the operations made by other softwares through one of the IanniX interfaces.
 *	You are not supposed to modify this section, but it can be useful to remove some stuff that you or a third party software added accidentaly.
 *	
 * 	Be very careful! This section is automaticaly overwritten when saving a score.
 */
function madeThroughInterfaces() {
//INTERFACES: NEVER EVER REMOVE THIS LINE
	run("rotate 0 -22.1614 -4.08377");
	run("speed 1");


//INTERFACES: NEVER EVER REMOVE THIS LINE
}


/*
 *	This method is called last.
 *	It allows you to modify your hand-drawn score (made through graphical user interface).
 *	
 * 	This section is never overwritten by IanniX when saving.
 */
function alterateWithScript() {
	
}


/*
 *	//APP VERSION: NEVER EVER REMOVE THIS LINE
 *	Made with IanniX 0.9.16
 *	//APP VERSION: NEVER EVER REMOVE THIS LINE
 */



/*
    This file is part of IanniX, a graphical real-time open-source sequencer for digital art
    Copyright (C) 2010-2015 — IanniX Association

    Project Manager: Thierry Coduys (http://www.le-hub.org)
    Development:     Guillaume Jacquemin (http://www.buzzinglight.com)

    This file was written by Guillaume Jacquemin.

    IanniX is a free software: you can redistribute it and/or modify
    it under the terms of the GNU General Public License as published by
    the Free Software Foundation, either version 3 of the License, or
    any later version.

    This program is distributed in the hope that it will be useful,
    but WITHOUT ANY WARRANTY; without even the implied warranty of
    MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
    GNU General Public License for more details.

    You should have received a copy of the GNU General Public License
    along with this program.  If not, see <http://www.gnu.org/licenses/>.
*/

