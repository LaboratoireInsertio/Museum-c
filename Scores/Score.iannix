/*
 *	IanniX Score File
 */


/*
 *	This method is called first.
 *	It is the good section for asking user for script global variables (parameters).
 *	
 * 	This section is never overwritten by IanniX when saving.
 */
function askUserForParameters() {
	//title("The title of the parameter box");
	//ask("Group name of the parameter (only for display purposes)", "Parameter label", "myGlobalVar", "theDefaultValue");
}


/*
 *	This method stores all the operations made through IanniX scripts.
 *	You can add some commands here to make your own scripts!
 *	Scripts are written in Javascript but even with a limited knowledge of Javascript, many types of useful scripts can be created.
 *	
 *	Beyond the standard javascript commands, the run() function is used to send commands to IanniX.
 *	Commands must be provided to run() as a single string.
 *	For example, run("zoom 100"); sets the display zoom to 100%.
 *	
 *	To combine numeric parameters with text commands to produce a string, use the concatenation operator.
 *	In the following example center_x and center_y are in numeric variables and must be concatenated to the command string.
 *	Example: run("setPos current " + center_x + " " + center_y + " 0");
 *	
 *	To learn IanniX commands, perform an manipulation in IanniX graphical user interface, and see the Helper window.
 *	You'll see the syntax of the command-equivalent action.
 *	
 *	And finally, remember that most of commands must target an object.
 *	Global syntax is always run("<command name> <target> <arguments>");
 *	Targets can be an ID (number) or a Group ID (string name of group) (please see "Info" tab in Inspector panel).
 *	Special targets are "current" (last used ID), "all" (all the objects) and "lastCurve" (last used curve).
 *	
 * 	This section is never overwritten by IanniX when saving.
 */
function makeWithScript() {
	//Clears the score
	run("clear");
	//Resets rotation
	run("rotate 0 0 0");
	//Resets score viewport center
	run("center 0 0");
	//Resets score zoom
	run("zoom 100");
}


/*
 *	When an incoming message is received, this method is called.
 *		- <protocol> tells information about the nature of message ("osc", "midi", "direct…)
 *		- <host> and <port> gives the origin of message, specially for IP protocols (for OpenSoundControl, UDP or TCP, it is the IP and port of the application that sends the message)
 *		- <destination> is the supposed destination of message (for OpenSoundControl it is the path, for MIDI it is Control Change or Note on/off…)
 *		- <values> are an array of arguments contained in the message
 *	
 * 	This section is never overwritten by IanniX when saving.
 */
function onIncomingMessage(protocol, host, port, destination, values) {
	//Logs a message in the console (open "Config" tab from Inspector panel and see "Message log")
	console("Received on '" + protocol + "' (" + host + ":" + port + ") to '" + destination + "', " + values.length + " values : ");
	
	//Browses all the arguments and displays them in log window
	for(var valueIndex = 0 ; valueIndex < values.length ; valueIndex++)
		console("- arg " + valueIndex + " = " + values[valueIndex]);
}


/*
 *	This method stores all the operations made through the graphical user interface.
 *	You are not supposed to modify this section, but it can be useful to remove some stuff that you added accidentaly.
 *	
 * 	Be very careful! This section is automaticaly overwritten when saving a score.
 */
function madeThroughGUI() {
//GUI: NEVER EVER REMOVE THIS LINE
	run("zoom 278.922");
	run("rotate 0 0 0");
	run("speed 1");
	run("center -0.368537 -6.58196");


	run("add curve 102");
	run("setpos current -5.3452 -6.32632 0");
	var points102 = [
		{x: -5, y: 0, z: 0, c1x: 0, c1y: 0, c1z: 0, c2x: 0, c2y: 0, c2z: 0},
		{x: 21.4519, y: -0.0761657, z: 0, c1x: 0, c1y: 0, c1z: 0, c2x: -5.29037, c2y: 0.0152331, c2z: 0},
	];
	for(var i = 0 ; i < points102.length ; i++)
		run("setpointat current " + i + " " + points102[i].x + " " + points102[i].y + " " + points102[i].z + " " + points102[i].c1x + " " + points102[i].c1y + " " + points102[i].c1z + " " + points102[i].c2x + " " + points102[i].c2y + " " + points102[i].c2z);
	run("setposz current 0");
	run("add cursor 103");
	run("setcurve current lastCurve");
	run("setpos current -10.3452 -6.32632 0");
	run("setwidth current 5");
	run("setboundssourcemode current 1");
	run("setmessage current 20, - ,");
	run("setpattern current 0 0 1");
	run("setspeedf current 1");


	run("add curve 107");
	run("setpos current 4.6679 -5.71217 0");
	run("setpointsellipse current 1.13347e-129 1.13347e-129");
	run("setresize current 2.26694e-129 2.26694e-129");
	run("setposz current 0");

	run("add curve 109");
	run("setpos current 0.534526 -9.07372 0");
	run("setpointsellipse current 2 2");
	run("add cursor 110");
	run("setcurve current lastCurve");
	run("setpos current 2.53453 -9.07372 0");
	run("setpattern current 0 0 1");
	run("setmessage current 20, - ,");
	run("settime current 0");


	run("add curve 111");
	run("setpos current -7.5756 -14.0284 0");
	var points111 = [
		{x: 0, y: 0, z: 0, c1x: 0, c1y: 0, c1z: 0, c2x: 0, c2y: 0, c2z: 0},
		{x: 3.32116, y: 0.830291, z: 0, c1x: 0.664232, c1y: 0.166058, c1z: 0, c2x: -0.544302, c2y: -0.756488, c2z: 0},
		{x: 2.72151, y: 3.78244, z: 0, c1x: 0.544302, c1y: 0.756488, c1z: 0, c2x: -0.369018, c2y: -1.03325, c2z: 0},
		{x: 5.16625, y: 5.99654, z: 0, c1x: 0.369018, c1y: 1.03325, c1z: 0, c2x: -0.599654, c2y: -1.07938, c2z: 0},
		{x: 5.71978, y: 9.17933, z: 0, c1x: 0.599654, c1y: 1.07938, c1z: 0, c2x: -0.119932, c2y: -0.636558, c2z: 0},
		{x: 5.76591, y: 9.17933, z: 0, c1x: 0.119932, c1y: 0.636558, c1z: 0, c2x: -0.664232, c2y: -0.535074, c2z: 0},
		{x: 9.04094, y: 11.8547, z: 0, c1x: 0.664232, c1y: 0.535074, c1z: 0, c2x: -0.655006, c2y: -0.535074, c2z: 0},
	];
	for(var i = 0 ; i < points111.length ; i++)
		run("setpointat current " + i + " " + points111[i].x + " " + points111[i].y + " " + points111[i].z + " " + points111[i].c1x + " " + points111[i].c1y + " " + points111[i].c1z + " " + points111[i].c2x + " " + points111[i].c2y + " " + points111[i].c2z);
	run("add cursor 112");
	run("setcurve current lastCurve");
	run("setpos current -7.5756 -14.0284 0");


	run("add curve 113");
	run("setpos current 9.30698 -13.1059 0");
	var points113 = [
		{x: 0, y: 0, z: 0, c1x: 0, c1y: 0, c1z: 0, c2x: 0, c2y: 0, c2z: 0},
		{x: 0, y: -0.0461273, z: 0, c1x: 0, c1y: -0.00922546, c1z: 0, c2x: 0.673458, c2y: -0.083029, c2z: 0},
		{x: -3.36729, y: 0.415145, z: 0, c1x: -0.673458, c1y: 0.083029, c1z: 0, c2x: 0.10148, c2y: -0.479723, c2z: 0},
		{x: -0.5074, y: 2.35249, z: 0, c1x: -0.10148, c1y: 0.479723, c1z: 0, c2x: -0.571978, c2y: -0.396695, c2z: 0},
		{x: -0.5074, y: 2.39862, z: 0, c1x: 0.571978, c1y: 0.396695, c1z: 0, c2x: 0.516626, c2y: 0, c2z: 0},
		{x: -3.09053, y: 2.35249, z: 0, c1x: -0.516626, c1y: 0, c1z: 0, c2x: 0.175284, c2y: -1.23621, c2z: 0},
		{x: -1.38382, y: 8.57967, z: 0, c1x: -0.175284, c1y: 1.23621, c1z: 0, c2x: -0.350568, c2y: -1.24544, c2z: 0},
		{x: -1.33769, y: 8.57967, z: 0, c1x: 0.350568, c1y: 1.24544, c1z: 0, c2x: 1.11628, c2y: -0.350566, c2z: 0},
		{x: -6.96522, y: 10.3325, z: 0, c1x: -1.11628, c1y: 0.350566, c1z: 0, c2x: 1.11628, c2y: -0.691906, c2z: 0},
		{x: -6.91909, y: 12.0392, z: 0, c1x: -1.11628, c1y: 0.691906, c1z: 0, c2x: -0.00922604, c2y: -0.34134, c2z: 0},
	];
	for(var i = 0 ; i < points113.length ; i++)
		run("setpointat current " + i + " " + points113[i].x + " " + points113[i].y + " " + points113[i].z + " " + points113[i].c1x + " " + points113[i].c1y + " " + points113[i].c1z + " " + points113[i].c2x + " " + points113[i].c2y + " " + points113[i].c2z);
	run("add cursor 114");
	run("setcurve current lastCurve");
	run("setpos current 9.30698 -13.1059 0");


	run("add curve 82");
	run("setpos current 5.42185 0.382712 0");
	run("setpointsellipse current 2 2");
	run("add cursor 83");
	run("setcurve current lastCurve");
	run("setpos current 7.42185 0.382712 0");
	run("setpattern current 0 0 1");
	run("setmessage current 20, - ,");


	run("add trigger 74");
	run("setpos current -13.9219 1.75817 0");
	run("setmessage current 1, direct:// rotate {random(-20, 20)} {random(0, -80)} {random(-40, 40)} ,");
	run("setlabel current Rotation_Trigger");

	run("add trigger 77");
	run("setpos current -3.70544 -0.814713 0");
	run("setlabel current C3");
	run("settriggeroff current 0.01");
	run("setmessage current 1, osc://ip_out:port_out/trigger trigger_label trigger_distance ,");
	run("setposz current 0");

	run("add trigger 79");
	run("setpos current -1.85896 1.63704 0");
	run("setlabel current D#4");
	run("settriggeroff current 0.01");
	run("setmessage current 1, osc://ip_out:port_out/trigger trigger_label trigger_distance ,");

	run("add trigger 80");
	run("setpos current -2.02092 -2.23447 0");
	run("setlabel current D4");
	run("settriggeroff current 0.01");
	run("setmessage current 1, osc://ip_out:port_out/trigger trigger_label trigger_distance ,");

	run("add trigger 81");
	run("setpos current -1.97134 -2.84198 0");
	run("setlabel current D#6");
	run("settriggeroff current 0.01");
	run("setmessage current 1, osc://ip_out:port_out/trigger trigger_label trigger_distance ,");

	run("add trigger 85");
	run("setpos current -0.987185 1.09782 0");
	run("setlabel current E2");
	run("settriggeroff current 0.01");
	run("setmessage current 1, osc://ip_out:port_out/trigger trigger_label trigger_distance ,");

	run("add trigger 86");
	run("setpos current -0.814455 -0.898497 0");
	run("setlabel current E4");
	run("settriggeroff current 0.01");
	run("setmessage current 1, osc://ip_out:port_out/trigger trigger_label trigger_distance ,");

	run("add trigger 87");
	run("setpos current -0.910925 -0.273547 0");
	run("setlabel current E5");
	run("settriggeroff current 0.01");
	run("setmessage current 1, osc://ip_out:port_out/trigger trigger_label trigger_distance ,");

	run("add trigger 88");
	run("setpos current -0.982378 0.312244 0");
	run("setlabel current E3");
	run("settriggeroff current 0.01");
	run("setmessage current 1, osc://ip_out:port_out/trigger trigger_label trigger_distance ,");

	run("add trigger 90");
	run("setpos current -3.45947 -3.05499 0");
	run("setlabel current C2");
	run("settriggeroff current 0.01");
	run("setmessage current 1, osc://ip_out:port_out/trigger trigger_label trigger_distance ,");
	run("setposz current 0");

	run("add trigger 91");
	run("setpos current -3.91898 0.13735 0");
	run("setlabel current C6");
	run("settriggeroff current 0.01");
	run("setmessage current 1, osc://ip_out:port_out/trigger trigger_label trigger_distance ,");
	run("setposz current 0");

	run("add trigger 92");
	run("setpos current -4.10579 1.75777 0");
	run("setlabel current C4");
	run("settriggeroff current 0.01");
	run("setmessage current 1, osc://ip_out:port_out/trigger trigger_label trigger_distance ,");
	run("setposz current 0");

	run("add trigger 93");
	run("setpos current -3.31137 -3.73063 0");
	run("setlabel current C5");
	run("settriggeroff current 0.01");
	run("setmessage current 1, osc://ip_out:port_out/trigger trigger_label trigger_distance ,");
	run("setposz current 0");

	run("add trigger 94");
	run("setpos current -3.56516 -2.42561 0");
	run("setlabel current C#5");
	run("settriggeroff current 0.01");
	run("setmessage current 1, osc://ip_out:port_out/trigger trigger_label trigger_distance ,");
	run("setposz current 0");

	run("add trigger 95");
	run("setpos current -2.03148 -0.45316 0");
	run("setlabel current D#2");
	run("settriggeroff current 0.01");
	run("setmessage current 1, osc://ip_out:port_out/trigger trigger_label trigger_distance ,");

	run("add trigger 96");
	run("setpos current -1.96361 0.30404 0");
	run("setlabel current D3");
	run("settriggeroff current 0.01");
	run("setmessage current 1, osc://ip_out:port_out/trigger trigger_label trigger_distance ,");

	run("add trigger 97");
	run("setpos current -1.94526 -1.11999 0");
	run("setlabel current D5");
	run("settriggeroff current 0.01");
	run("setmessage current 1, osc://ip_out:port_out/trigger trigger_label trigger_distance ,");

	run("add trigger 98");
	run("setpos current -1.881 1.10639 0");
	run("setlabel current D#3");
	run("settriggeroff current 0.01");
	run("setmessage current 1, osc://ip_out:port_out/trigger trigger_label trigger_distance ,");

	run("add trigger 99");
	run("setpos current -1.95432 -1.60608 0");
	run("setlabel current D#5");
	run("settriggeroff current 0.01");
	run("setmessage current 1, osc://ip_out:port_out/trigger trigger_label trigger_distance ,");

	run("add trigger 101");
	run("setpos current -3.73359 -1.64118 0");
	run("setlabel current C#3");
	run("settriggeroff current 0.01");
	run("setmessage current 1, osc://ip_out:port_out/trigger trigger_label trigger_distance ,");
	run("setposz current 0");
	run("trig current false");

	run("add trigger 104");
	run("setpos current -4.05724 0.849815 0");
	run("setlabel current C#4");
	run("setmessage current 1, osc://ip_out:port_out/trigger trigger_label trigger_distance ,");
	run("settriggeroff current 0.01");



//GUI: NEVER EVER REMOVE THIS LINE
}


/*
 *	This method stores all the operations made by other softwares through one of the IanniX interfaces.
 *	You are not supposed to modify this section, but it can be useful to remove some stuff that you or a third party software added accidentaly.
 *	
 * 	Be very careful! This section is automaticaly overwritten when saving a score.
 */
function madeThroughInterfaces() {
//INTERFACES: NEVER EVER REMOVE THIS LINE
	run("rotate 0 0 0");
	run("speed 1");


//INTERFACES: NEVER EVER REMOVE THIS LINE
}


/*
 *	This method is called last.
 *	It allows you to modify your hand-drawn score (made through graphical user interface).
 *	
 * 	This section is never overwritten by IanniX when saving.
 */
function alterateWithScript() {
	
}


/*
 *	//APP VERSION: NEVER EVER REMOVE THIS LINE
 *	Made with IanniX 0.9.17
 *	//APP VERSION: NEVER EVER REMOVE THIS LINE
 */



/*
    This file is part of IanniX, a graphical real-time open-source sequencer for digital art
    Copyright (C) 2010-2015 — IanniX Association

    Project Manager: Thierry Coduys (http://www.le-hub.org)
    Development:     Guillaume Jacquemin (http://www.buzzinglight.com)

    This file was written by Guillaume Jacquemin.

    IanniX is a free software: you can redistribute it and/or modify
    it under the terms of the GNU General Public License as published by
    the Free Software Foundation, either version 3 of the License, or
    any later version.

    This program is distributed in the hope that it will be useful,
    but WITHOUT ANY WARRANTY; without even the implied warranty of
    MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
    GNU General Public License for more details.

    You should have received a copy of the GNU General Public License
    along with this program.  If not, see <http://www.gnu.org/licenses/>.
*/

